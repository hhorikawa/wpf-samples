<!-- -*- mode:xml -*- -->
<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:dotnet_http2_sample"
        x:Class="dotnet_http2_sample.MainWindow"
        Title="MainWindow" Height="800" Width="600" ResizeMode="CanResizeWithGrip">
  <Window.DataContext>
    <local:MyViewModel />
  </Window.DataContext>
  <Window.Resources>
    <!-- エラー時にメッセージを表示する -->
    <ControlTemplate x:Key="errorTemplate">
      <StackPanel>
        <!-- 枠線を付ける -->
        <Border BorderBrush="Red" BorderThickness="1"
             Width="{Binding ElementName=adornedElement, Path=ActualWidth}"
             Height="{Binding ElementName=adornedElement, Path=ActualHeight}">
          <!-- Placeholder for the TextBox itself -->
          <AdornedElementPlaceholder Name="adornedElement"/>
        </Border>
        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red" />
      </StackPanel>
    </ControlTemplate>
  </Window.Resources>
<!-- CommandBindings は dependency property ではない。view model に bind で
  きない
  => コンストラクタで設定する。 -->

  <!-- アプリケーションでは, DockPanel が基本 -->
  <DockPanel LastChildFill="True" HorizontalAlignment="Stretch"
             VerticalAlignment="Stretch">
    <Menu DockPanel.Dock="Top">
      <MenuItem Header="ファイル(_F)">
        <MenuItem Header="終了(_X)" Command="ApplicationCommands.Close" />
      </MenuItem>
    </Menu>
    <StatusBar DockPanel.Dock="Bottom">
<!-- <StatusBar> がコンテナになっているので、単に子アイテムを並べればよい.
  左下と右下のように、アイテム表示のレイアウトを調整したいときは,
  <StatusBar.ItemsPanel> で指定する. -->
      <StatusBar.ItemsPanel>
        <ItemsPanelTemplate>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="100" />
            </Grid.ColumnDefinitions>
          </Grid>
        </ItemsPanelTemplate>
      </StatusBar.ItemsPanel>
      <!-- StatusBarItem で表示カラムを指定する. -->
      <StatusBarItem Grid.Column="0" >Status</StatusBarItem>
      <StatusBarItem Grid.Column="1">●パネル2</StatusBarItem>
    </StatusBar>

<!-- DockPanel: 最後に置いた子アイテムで埋められる.
  StackPanel だと, さらにその内側の要素がストレッチされない. Workaround で
  <Grid> 内に配置.
  -->
    <Grid Background="Azure" Margin="10">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
        <RowDefinition Height="150" />
        <RowDefinition />  <!-- これでストレッチ -->
      </Grid.RowDefinitions>

      <!-- ここも Grid を使う. -->
      <Grid Grid.Row="0" HorizontalAlignment="Stretch">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Label Grid.Column="0" Content="URL:" />
<!-- Validator から view model へのエラー通知には behaviour を使う -->
        <TextBox Grid.Column="1" Name="urlBox" Height="23" Margin="0,0,10,0"
                 Validation.ErrorTemplate="{StaticResource errorTemplate}"
                 local:ValidationBehavior.HasErrors="{Binding HasErrors}"
                 KeyDown="urlBox_KeyDown" >
          <TextBox.Text>
            <Binding Path="UrlBox" UpdateSourceTrigger="PropertyChanged"
                     NotifyOnValidationError="True" >
              <Binding.ValidationRules >
                <local:ValidatesPresence />
                <local:ValidatesURI />
              </Binding.ValidationRules>
            </Binding>
          </TextBox.Text>
        </TextBox>
        <!-- Command プロパティは, {Binding... 不要. "コマンド" のほうを指定 -->
        <Button Name="fetchButton" Grid.Column="2" Content="Fetch" Width="75"
                Command="{x:Static local:MyCommands.FetchCommand}" />
      </Grid>
      <Label Grid.Row="1" Content="Response" />
      <TextBox Grid.Row="2" Text="{Binding ResponseHeader}"
             AcceptsReturn="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Visible" />
      <TextBox Grid.Row="3" Text="{Binding ResponseBody}"
             AcceptsReturn="True" TextWrapping="Wrap" Margin="0,8,0,0" VerticalScrollBarVisibility="Visible" />
    </Grid>
  </DockPanel>
</Window>
